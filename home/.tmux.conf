# Brian Ustas's .tmux.conf
#
# Tested on OS X.
#
# Expected installs:
# - https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
#   - Enables the clipboard on OS X
#   - brew install reattach-to-user-namespace

# Make the OS X clipboard work within tmux (ignored on Linux).
set -g default-command "which reattach-to-user-namespace >/dev/null && reattach-to-user-namespace -l zsh || zsh"

# Make zsh the default shell.
set -g default-shell $SHELL

# Set 256 color support.
# Matches $TERM.
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

# Act like GNU Screen.
set -g prefix C-a
unbind-key C-b

# To send C-a to the shell: C-a, C-a
bind-key C-a send-prefix

# Increase scrollback lines.
set -g history-file ~/.tmux_history
set -g history-limit 50000

# Allows for faster key repetition.
set -g escape-time 0

# Start status bar numbering at 1.
set -g base-index 1

# Rename windows based on what's running in them.
setw -g automatic-rename on

# Renumber existing windows when windows are destroyed.
set -g renumber-windows on

# Enable mouse support (-q for quiet).
set -g -q mouse on

# Ctrl-p/n for tmux command history in the status bar.
set -g status-keys emacs

# ENV vars to be updated when creating a new session.
# https://stackoverflow.com/a/9833996/1575238
# ITERM_PROFILE is needed by tmux/apply_theme.conf
set -ga update-environment "ITERM_PROFILE"

# Enter copy-mode with PREFIX [
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -in -selection clipboard"

# Disable confirmation prompt before killing windows and panes.
bind-key & kill-window
bind-key x kill-pane

# Always list windows in the top left corner.
bind-key w select-pane -t 0 \; choose-window

# Resize panes using PREFIX H, J, K, L
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

# Quickly reload .tmux.conf
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Don't display the original name when renaming. Makes renaming faster.
bind-key , command-prompt -p "(rename-window '#W')" "rename-window '%%'"
bind-key '$' command-prompt -p "(rename-session '#S')" "rename-session '%%'"

# Create new split/window with the current directory.
# https://unix.stackexchange.com/a/12091
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Status bar
set -g clock-mode-style 24
set -g status-left "#[fg=blue,bold] « #S » "
set -g status-left-length 32 # maximum width
set -g status-right "%a %H:%M %m-%d-%y "
set -g window-status-format " #I:#W#{?window_zoomed_flag, [Z],} "
set -g window-status-current-format " #I:#W#{?window_zoomed_flag, [Z],} "

# Colors
# Looks at ITERM_PROFILE to pick the correct colorscheme.
set-hook -g after-new-session "source-file ~/dotfiles/tmux/apply_theme.conf"
set-hook -g after-new-window "source-file ~/dotfiles/tmux/apply_theme.conf"
