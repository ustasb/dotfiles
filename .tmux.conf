# Brian Ustas's .tmux.conf
#
# Supports OS X and Linux (tested with Yosemite and Ubuntu 14.04).
#
### Expected Installs
#
# - https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
#   - Enables the clipboard on OS X
#   - brew install reattach-to-user-namespace

# Force tmux to use UTF-8.
set -g utf8
setw -g utf8 on

# Make the OS X clipboard work within tmux (ignored on Linux).
set -g default-command "which reattach-to-user-namespace >/dev/null && reattach-to-user-namespace -l zsh || zsh"

# Make zsh the default shell.
set -g default-shell $SHELL

# Set 256 color support.
set -g default-terminal "screen-256color"

# Act like GNU Screen.
set -g prefix C-a
unbind C-b

# To send C-a to the shell: C-a, C-a
bind C-a send-prefix

# Increase scrollback lines.
set -g history-limit 50000

# Allows for faster key repetition.
set -g escape-time 0

# Start numbering at 1.
set -g base-index 1

# Rename windows based on what's running in them.
setw -g automatic-rename on

# Renumber existing windows when windows are destroyed.
set -g renumber-windows on

# Enable mouse support (-q for quiet).
set-option -g -q mouse on

# Behave like Vim.
setw -g mode-keys vi
# Ctrl-p/n for tmux command history in the status bar.
set -g status-keys emacs

# Enter copy-mode with PREFIX [
# Setup 'v' to begin selection as in Vim.
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
# Copy selection on Enter.
unbind -t vi-copy Enter
bind -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Use PREFIX | to split window horizontally and PREFIX - to split vertically.
bind | split-window -h
bind - split-window -v

# Use PREFIX p and PREFIX n to cycle through windows.
bind -r C-p select-window -t :-
bind -r C-n select-window -t :+

# Resize panes using PREFIX H, J, K, L
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Restore 'clear screen'.
bind C-l send-keys 'C-l'

# Status bar
set -g status-left ""
set -g status-right "#[fg=white]%m-%d-%y %H:%M "

# Colors (credit: connrs/dotfiles/master/tmux/tomorrow-night.tmux)
  # Status bar
  set -g status-bg "#373b41"
  set -g status-fg "#c5c8c6"

  # Active window highlights
  setw -g window-status-current-bg "#b4b7b5"
  setw -g window-status-current-fg "#1d1f21"
  setw -g window-status-current-attr bold

  # Highlight activity in status bar.
  setw -g window-status-activity-fg "#8abeb7"
  setw -g window-status-activity-bg "#1d1f21"

  # Pane border and colors
  set -g pane-active-border-bg default
  set -g pane-active-border-fg "#373b41"
  set -g pane-border-bg default
  set -g pane-border-fg "#373b41"

  set -g clock-mode-colour "#81a2be"
  set -g clock-mode-style 24

  set -g message-bg "#8abeb7"
  set -g message-fg "#000000"
  set -g message-attr bold

  set -g message-command-bg "#8abeb7"
  set -g message-command-fg "#000000"

  set -g mode-bg "#8abeb7"
  set -g mode-fg "#000000"

if-shell 'test -n "$USING_LIGHT_THEME"' "source-file ~/.tmux_light_theme.conf"
